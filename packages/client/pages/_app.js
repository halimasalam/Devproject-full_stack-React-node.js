import { useEffect, useState, useRef } from "react";
import Head from "next/head";
import FullLayout from "../layouts/FullLayout";
import { useRouter } from "next/router";
import { store, persistor } from "../store";
import { Provider } from "react-redux";
import { PersistGate } from "redux-persist/integration/react";
import { useSelector } from "react-redux";
import axios from "axios";
import { ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import "../styles/style.scss";

function AuthWrapper({ Component, pageProps }) {
  const isFetchingRef = useRef(false);
  const router = useRouter();
  const auth = useSelector(state => state.auth);
  const [recentFoodCount, setRecentFoodCount] = useState({});

  const fetchRecentFoodCount = async () => {
    if (!auth.isAdmin || isFetchingRef.current) return;
    try {
      isFetchingRef.current = true;
      const res = await axios.get("/reports/getRecentFoodCount");
      setRecentFoodCount(res.data);
    } finally {
      isFetchingRef.current = false;
    }
  };

  useEffect(() => {
    if (router.pathname === "/dashboard") return;
    fetchRecentFoodCount();
  }, [auth, router]);

  if (auth.isAuthenticated) {
    axios.defaults.headers.common["Authorization"] = `Bearer ${auth.token}`;

    return (
      <FullLayout>
        <Component
          {...pageProps}
          recentFoodCount={recentFoodCount}
          fetchRecentFoodCount={fetchRecentFoodCount}
        />
      </FullLayout>
    );
  }

  if (router.pathname === "/login") {
    return <Component {...pageProps} />;
  }

  router.push("/login");
  return <></>;
}

function MyApp({ Component, pageProps }) {
  axios.defaults.baseURL = "http://localhost:4000";

  return (
    <Provider store={store}>
      <PersistGate loading={null} persistor={persistor}>
        <Head>
          <title>Calorie Tracker</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <AuthWrapper Component={Component} pageProps={pageProps} />
        <ToastContainer />
      </PersistGate>
    </Provider>
  );
}

export default MyApp;
